name: cicd

on:
  push:
    branches: ["main", "release", "development", "feature/**"] # '**' match any character including '/'. '*' match any character excluding '/'.
  pull_request:
    branches: ["main", "release", "development"]

jobs:
  evaluating:
    runs-on: ubuntu-latest

    steps:
      - name: Check if the branch is a protected one
        id: check-branch
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]] || [[ ${{ github.ref }} == 'refs/heads/release' ]] || [[ ${{ github.ref }} == 'refs/heads/development' ]]; then
              echo "match=true" >> $GITHUB_OUTPUT
          fi
      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "match=true" >> $GITHUB_OUTPUT
          fi
      - name: Build Tag
        if: steps.check-tag.outputs.match == "true"
        run: |
          echo "Tag is a match"

  # This workflow executes several linters on changed files based on languages used in your code base whenever
  # you push a code or open a pull request.

  # You can adjust the behavior by modifying this file.
  # For more information, see:
  # https://github.com/github/super-linter
  linting:
    needs: evaluating
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: "main"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 'This' workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
  # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
  testing:
    needs: linting
    runs-on: ubuntu-latest

    strategy:
      matrix: # performing action on multiple version/platform
        node-version: [16.x] # [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      # - run: npm run build --if-present
      - run: npm run ci:test

  docker:
    needs: testing
    runs-on: ubuntu-latest
    steps:

      - run: |
          if [[ ${{ steps.check-branch.outputs.match }} == "true" ]]; then 
            echo "Dockerizing" 
          else
            echo "Skipping docker step"
          fi
      # - name: Skipping Docker step
      #   if: steps.check-branch.outputs.match != 'true'
      #   run: |
      #     echo "Feature development branch does not need to create and push docker image."

      # - name: Dockerizing
      #   if: steps.check-branch.outputs.match == 'true'
      #   run: |
      #     echo "Creating docker image and push."

      - name: Set up QEMU
        if: steps.check-branch.outputs.match == "true"
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.check-branch.outputs.match == "true"
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: steps.check-branch.outputs.match == "true"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: steps.check-branch.outputs.match == "true"
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/private
